# Dynamic Mock Server Configuration

# Server Configuration
PORT=8080
API_PREFIX=/api
NODE_ENV=development

# Storage Configuration
# Options: file, postgres, postgresql, mongodb, mongo
STORAGE_TYPE=file

# Legacy support (deprecated - use STORAGE_TYPE instead)
# USE_DB=false

# PostgreSQL Configuration (when STORAGE_TYPE=postgres)
# Option 1: Use connection string
# DATABASE_URL=postgresql://username:password@host:port/database

# Option 2: Use individual parameters
# POSTGRES_HOST=localhost
# POSTGRES_PORT=5432
# POSTGRES_USER=postgres
# POSTGRES_PASSWORD=password
# POSTGRES_DB=mock_server

# MongoDB Configuration (when STORAGE_TYPE=mongodb)
# Option 1: Use connection string
# MONGODB_URL=mongodb://localhost:27017/mock_server

# Option 2: Use individual parameters  
# MONGO_HOST=localhost
# MONGO_PORT=27017
# MONGO_DB=mock_server

# Optional: Authentication for MongoDB
# MONGO_USER=username
# MONGO_PASSWORD=password

# Logging Configuration
LOG_DEV_REQUESTS=false

# Dynamic Values Configuration
# All dynamic values are enabled by default
# Individual mocks can override via the "Enable dynamic value generation" checkbox

# Example configurations for different environments:

# File-based (default - no database required)
# STORAGE_TYPE=file

# PostgreSQL with connection string
# STORAGE_TYPE=postgres
# DATABASE_URL=postgresql://postgres:password@localhost:5432/mock_server

# PostgreSQL with individual parameters
# STORAGE_TYPE=postgres
# POSTGRES_HOST=localhost
# POSTGRES_PORT=5432  
# POSTGRES_USER=postgres
# POSTGRES_PASSWORD=password
# POSTGRES_DB=mock_server

# MongoDB with connection string
# STORAGE_TYPE=mongodb
# MONGODB_URL=mongodb://localhost:27017/mock_server

# MongoDB with individual parameters
# STORAGE_TYPE=mongodb
# MONGO_HOST=localhost
# MONGO_PORT=27017
# MONGO_DB=mock_server

# Dynamic Mock Server Configuration

# Server Configuration
PORT=8080
API_PREFIX=/api
NODE_ENV=development

# Storage Configuration
# Options: file, postgres, postgresql, mongodb, mongo
STORAGE_TYPE=file

# Legacy support (deprecated - use STORAGE_TYPE instead)
# USE_DB=false

# PostgreSQL Configuration (when STORAGE_TYPE=postgres)
# Option 1: Use connection string
# DATABASE_URL=postgresql://username:password@host:port/database

# Option 2: Use individual parameters
# POSTGRES_HOST=localhost
# POSTGRES_PORT=5432
# POSTGRES_USER=postgres
# POSTGRES_PASSWORD=password
# POSTGRES_DB=mock_server

# MongoDB Configuration (when STORAGE_TYPE=mongodb)
# Option 1: Use connection string
# MONGODB_URL=mongodb://localhost:27017/mock_server

# Option 2: Use individual parameters  
# MONGO_HOST=localhost
# MONGO_PORT=27017
# MONGO_DB=mock_server

# Optional: Authentication for MongoDB
# MONGO_USER=username
# MONGO_PASSWORD=password

# Logging Configuration
LOG_DEV_REQUESTS=false

# Dynamic Values Configuration
# All dynamic values are enabled by default
# Individual mocks can override via the "Enable dynamic value generation" checkbox

# Example configurations for different environments:

# File-based (default - no database required)
# STORAGE_TYPE=file

# PostgreSQL with connection string
# STORAGE_TYPE=postgres
# DATABASE_URL=postgresql://postgres:password@localhost:5432/mock_server

# PostgreSQL with individual parameters
# STORAGE_TYPE=postgres
# POSTGRES_HOST=localhost
# POSTGRES_PORT=5432  
# POSTGRES_USER=postgres
# POSTGRES_PASSWORD=password
# POSTGRES_DB=mock_server

# MongoDB with connection string
# STORAGE_TYPE=mongodb
# MONGODB_URL=mongodb://localhost:27017/mock_server

# MongoDB with individual parameters
# STORAGE_TYPE=mongodb
# MONGO_HOST=localhost
# MONGO_PORT=27017
# MONGO_DB=mock_server

# === OpenTelemetry & Metrics Configuration ===
# Enable/disable OpenTelemetry (default: false)
ENABLE_OTEL=false

# Service name for OpenTelemetry
OTEL_SERVICE_NAME=dynamic-mock-server

# Service version for OpenTelemetry  
OTEL_SERVICE_VERSION=1.0.0

# === OTLP Tracing Configuration (Optional) ===
# Enable OTLP tracing (requires OTLP collector/backend)
ENABLE_TRACING=false

# OTLP endpoint for trace export (Jaeger, Zipkin, or custom OTLP collector)
OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=http://localhost:4318/v1/traces

# Legacy Jaeger support (deprecated - use OTLP instead)
# ENABLE_JAEGER=false
# JAEGER_ENDPOINT=http://localhost:14268/api/traces

# === Prometheus Metrics Configuration ===
# Port for the standalone Prometheus metrics server
PROMETHEUS_PORT=9464

# Endpoint path for Prometheus metrics
PROMETHEUS_ENDPOINT=/metrics

# === Analytics Configuration ===
# Enable analytics data collection
ENABLE_ANALYTICS=true

# Analytics data retention in days
ANALYTICS_RETENTION_DAYS=30

# === Security Configuration ===
# Enable CORS (default: true)
ENABLE_CORS=true

# Enable Helmet security headers (default: true)
ENABLE_HELMET=true
